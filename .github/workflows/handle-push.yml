name: Handling Pushes Requiring Submission
run-name: Handling A Push Requiring Submission By @${{ github.actor }}

# リモートのmainブランチへ、submitするノートブックがプッシュされた時に、自動でsubmitします。
# 何らかの理由でsubmitできなかった場合、ノートブックをsubmission待ちのリストに追加します。
# リストに追加されたノートブックは、手動のワークフローでsubmitするか、翌朝9時の自動submissionを待ちます。

on: 
  push:
    branches: [main]
    paths: ['notebooks/models/**.ipynb']

defaults:
  run:
    shell: bash

jobs:
  specify-notebooks: # コミット内容からsubmissionが必要なノートブックを特定します。
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
      - name: RENSHU
        run: python .scripts/workflows/sample3.py

      - id: get-files
        name: Get all added/modified files via API
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BEFORE: ${{ github.event.before }}
          AFTER: ${{ github.event.after }}
        run: |
          files=$(curl -s -H "Authorization: Bearer ${TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${REPO}/compare/${BEFORE}...${AFTER} | \
            jq -r '.files[] | select(.status == "added" or .status == "modified") | .filename' | \
            paste -sd "," -)
          printf "files=%s\n" "${files}" >> "${GITHUB_OUTPUT}"

      - id: filter-files
        name: Filter files under notebooks/model/
        env:
          FILES: ${{ steps.get-files.outputs.files }}
        run: |
          echo "${FILES}"
          filtered=$(echo "${FILES}" | \
            tr ',' '\n' | \
            grep '^notebooks/models.*\.ipynb$' | grep -v 'checkpoint' | \
            paste -sd ' ' -)
          printf "files=%s\n" "${filtered}" >> "${GITHUB_OUTPUT}"

      - id: run-script
        name: Filter notebooks completely and save to waiting_submission.jsonl
        env:
          FILES: ${{ steps.filter-files.outputs.files }}
          USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${FILES}"
          pip install nbformat
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          to_submit=$(python .scripts/workflows/filter_notebooks.py ${USERNAME} ${FILES})
          git add .
          git commit -m "Filter_notebooks.py updated files."
          git push origin main
          printf "to_submit=%s\n" "${to_submit}" >> "${GITHUB_OUTPUT}"
    outputs:
      to_submit: ${{ steps.run-script.outputs.to_submit }}

  submit: # 前のジョブから受け取った情報に基づいてsubmitします。
    runs-on: ubuntu-latest
    needs: [specify-notebooks]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip

      - id: submit
        name: Submit by an Action
        uses: ./.github/actions/submission/
        with:
          notebooks: ${{ needs.specify-notebooks.outputs.to_submit }}